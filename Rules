#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

## Preprocessor Phase

preprocess do
  tags.each do |tag|
    @items << Nanoc::Item.new(%[ <%= render 'tag', :tagname => "#{tag}" %> ], { :title => "#{tag}"}, "/tag/#{tag}" )
  end

  @items << Nanoc::Item.new("", { :title => "Home"}, "/" )
end

## Compilation Phase

compile '/' do
  printf "processing: %10s item %s\n", item[:extension], item.identifier
  filter :erb
  layout 'main'
end

compile '/tag/*' do
  filter :erb
  snapshot :content
  layout 'article'
end

compile '*' do
  unless item.binary?
    printf "processing: %10s item %s\n", item[:extension], item.identifier
    case item[:extension]
    when /css|js/
      layout 'none'
    when /markdown|md|wiki/
      filter :rdiscount
      filter :typogruby
      snapshot :content
      layout 'article'
    when "asciidoc"
      filter :asciidoc
      filter :cleanup
      snapshot :content
      layout 'article'
    else
      filter :erb
      filter :colorize_syntax, :default_colorizer => :pygmentize
      snapshot :content
      layout 'article'
    end
  end
end

## Routing Phase

route '/' do
  '/index.html'
end

route '/tag/*' do
  item.identifier + 'index.html'
end

route '/stylesheet/' do
  '/style.css'
end

route '/syntax/' do
  file_name(item)
end

route '/asciidoc/' do
  '/asciidoc.js'
end

route '/ad/' do
  '/asciidoc.css'
end


route '/images/icons/callouts/*' do
  mkdir_p '/images/icons/callouts/'
end

route '/images/icons/*' do
  mkdir_p '/images/icons/'
end

route '*' do
  file_for(item)
end

## Layout Phase

layout '*', :erb
